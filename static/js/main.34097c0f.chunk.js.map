{"version":3,"sources":["api/api.ts","components/Select/Select.tsx","components/Modal/ModalError.tsx","App.tsx","index.tsx"],"names":["getSelectDataTerms","a","axios","get","response","data","getSelectDataBrandsTerms","getSelectDataStyles","Select","selectList","prefix","useState","selectValue","setSelectValue","useEffect","query","window","location","pathname","split","filter","el","length","replace","name","value","onChange","e","actualPathname","history","pushState","target","newUrl","map","slug","label","id","ModalError","content","active","setActive","className","type","onClick","App","isModalActive","setIsModalActive","termsSelectData","setTermsSelectData","brandsTermsSelectData","setBrandsTermsSelectData","stylesSelectData","setStylesSelectData","termsDataFromServer","brandsTermsDataFromServer","stylesDataFromServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAEaA,EAAkB,uCAAG,4BAAAC,EAAA,sEACTC,IAAMC,IAAI,6DADD,cAC1BC,EAD0B,yBAGzBA,EAASC,MAHgB,2CAAH,qDAMlBC,EAAwB,uCAAG,4BAAAL,EAAA,sEACfC,IAAMC,IAAI,oEADK,cAChCC,EADgC,yBAG/BA,EAASC,MAHsB,2CAAH,qDAMxBE,EAAmB,uCAAG,4BAAAN,EAAA,sEACVC,IAAMC,IAAI,8DADA,cAC3BC,EAD2B,yBAG1BA,EAASC,MAHiB,2CAAH,qD,OCNnBG,EAA0B,SAAC,GAGjC,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,OAEA,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAmCA,OAZAC,qBAAU,WACR,IAEMC,EAFiBC,OAAOC,SAASC,SAGpCC,MAAM,KACNC,QAAO,SAACC,GAAD,QAAUA,EAAGC,QAAUD,EAAGF,MAAM,KAAK,KAAOT,KAAQ,GAE1DK,GACFF,EAAeE,EAAMQ,QAAN,UAAiBb,EAAjB,KAA4B,OAE5C,IAGD,wBAAQc,KAAK,SAASC,MAAOb,EAAac,SAlCtB,SAACC,GACrB,IAAMC,EAAiBZ,OAAOC,SAASC,SAEvC,GAAIN,EACFI,OAAOa,QAAQC,UACb,GACA,GACAF,EAAeL,QAAf,UAA0Bb,EAA1B,YAAoCE,GAApC,UAAsDF,EAAtD,YAAgEiB,EAAEI,OAAON,aAEtE,CACL,IAAMO,EAASJ,EAAeL,QAC5BK,EADa,UAEVA,EAAeN,OAAS,EAAxB,UAA+BM,EAA/B,KAAmD,IAFzC,OAE8ClB,EAF9C,YAEwDiB,EAAEI,OAAON,QAGhFT,OAAOa,QAAQC,UAAU,GAAI,GAAIE,GAGnCnB,EAAec,EAAEI,OAAON,QAgBxB,SACGhB,EAAWwB,KAAI,SAACZ,GAAD,OACd,wBAAoBI,MAAOJ,EAAGa,KAA9B,SACGb,EAAGc,OADOd,EAAGe,UCzCXC,G,MAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEA,OACE,qBACEC,UAAWF,EAAS,eAAiB,QADvC,SAGE,sBAAKE,UAAU,iBAAf,UACE,6BACGH,IAEH,wBACEI,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAMH,GAAU,IAH3B,+DCXKI,EAAgB,WAC3B,MAA0CjC,oBAAS,GAAnD,mBAAOkC,EAAP,KAAsBC,EAAtB,KAEA,EAA8CnC,mBAAS,IAAvD,mBAAOoC,EAAP,KAAwBC,EAAxB,KACA,EAA0DrC,mBAAS,IAAnE,mBAAOsC,EAAP,KAA8BC,EAA9B,KACA,EAAgDvC,mBAAS,IAAzD,mBAAOwC,EAAP,KAAyBC,EAAzB,KAoBA,OAlBAtC,qBAAU,WAAM,4CACd,gCAAAb,EAAA,+EAEsCD,IAFtC,cAEUqD,EAFV,gBAG4C/C,IAH5C,cAGUgD,EAHV,gBAIuC/C,IAJvC,OAIUgD,EAJV,OAMIP,EAAmBK,EAAoBhD,MACvC6C,EAAyBI,EAA0BjD,MACnD+C,EAAoBG,EAAqBlD,MAR7C,kDAUIyC,GAAiB,GAVrB,2DADc,uBAAC,WAAD,wBAed1C,KACC,IAGD,sBAAKqC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQ/B,OAAO,IAAID,WAAYsC,IAC/B,cAAC,EAAD,CAAQrC,OAAO,IAAID,WAAYwC,IAC/B,cAAC,EAAD,CAAQvC,OAAO,KAAKD,WAAY0C,IAE/BN,GACC,cAAC,EAAD,CACEN,OAAQM,EACRL,UAAWM,EACXR,QAAQ,sCCzClBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.34097c0f.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getSelectDataTerms = async () => {\n  const response = await axios.get('https://onboarding.art-code.team/api/test/v1/search/terms');\n\n  return response.data;\n};\n\nexport const getSelectDataBrandsTerms = async () => {\n  const response = await axios.get('https://onboarding.art-code.team/api/test/v1/search/brands_terms');\n\n  return response.data;\n};\n\nexport const getSelectDataStyles = async () => {\n  const response = await axios.get('https://onboarding.art-code.team/api/test/v1/search/styles');\n\n  return response.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { selectOption } from '../../types/selectOption';\n\ntype Props = {\n  selectList: selectOption[];\n  prefix: string;\n};\n\nexport const Select: React.FC<Props> = ({\n  selectList,\n  prefix,\n}) => {\n  const [selectValue, setSelectValue] = useState('');\n\n  const selectHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const actualPathname = window.location.pathname;\n\n    if (selectValue) {\n      window.history.pushState(\n        {},\n        '',\n        actualPathname.replace(`${prefix}-${selectValue}`, `${prefix}-${e.target.value}`),\n      );\n    } else {\n      const newUrl = actualPathname.replace(\n        actualPathname,\n        `${actualPathname.length > 1 ? `${actualPathname}/` : ''}${prefix}-${e.target.value}`,\n      );\n\n      window.history.pushState({}, '', newUrl);\n    }\n\n    setSelectValue(e.target.value);\n  };\n\n  useEffect(() => {\n    const actualPathname = window.location.pathname;\n\n    const query = actualPathname\n      .split('/')\n      .filter((el) => !!el.length && el.split('-')[0] === prefix)[0];\n\n    if (query) {\n      setSelectValue(query.replace(`${prefix}-`, ''));\n    }\n  }, []);\n\n  return (\n    <select name=\"select\" value={selectValue} onChange={selectHandler}>\n      {selectList.map((el) => (\n        <option key={el.id} value={el.slug}>\n          {el.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import React from 'react';\nimport './ModalError.scss';\n\ntype Props = {\n  content: string,\n  active: boolean,\n  setActive: (isAct: boolean) => void,\n};\n\nexport const ModalError: React.FC<Props> = ({\n  content,\n  active,\n  setActive,\n}) => {\n  return (\n    <div\n      className={active ? 'modal active' : 'modal'}\n    >\n      <div className=\"modal__content\">\n        <h3>\n          {content}\n        </h3>\n        <button\n          type=\"button\"\n          className=\"modal__button\"\n          onClick={() => setActive(false)}\n        >\n          Закрити\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport {\n  getSelectDataBrandsTerms,\n  getSelectDataStyles,\n  getSelectDataTerms,\n} from './api/api';\n\nimport { Select } from './components/Select/Select';\nimport { ModalError } from './components/Modal/ModalError';\n\nexport const App: React.FC = () => {\n  const [isModalActive, setIsModalActive] = useState(false);\n\n  const [termsSelectData, setTermsSelectData] = useState([]);\n  const [brandsTermsSelectData, setBrandsTermsSelectData] = useState([]);\n  const [stylesSelectData, setStylesSelectData] = useState([]);\n\n  useEffect(() => {\n    async function response() {\n      try {\n        const termsDataFromServer = await getSelectDataTerms();\n        const brandsTermsDataFromServer = await getSelectDataBrandsTerms();\n        const stylesDataFromServer = await getSelectDataStyles();\n\n        setTermsSelectData(termsDataFromServer.data);\n        setBrandsTermsSelectData(brandsTermsDataFromServer.data);\n        setStylesSelectData(stylesDataFromServer.data);\n      } catch {\n        setIsModalActive(true);\n      }\n    }\n\n    response();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Select prefix=\"s\" selectList={termsSelectData} />\n      <Select prefix=\"b\" selectList={brandsTermsSelectData} />\n      <Select prefix=\"st\" selectList={stylesSelectData} />\n\n      {isModalActive && (\n        <ModalError\n          active={isModalActive}\n          setActive={setIsModalActive}\n          content=\"Cant load data from server...\"\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}